function launch_Hyscorean_fit(FileNames)

if ~iscell(FileNames)
  FileNames = {FileNames};
end

for Index = 1:length(FileNames)

load(FileNames{Index});

%Fill known experimental parameters
Exp{Index}.Sequence = 'HYSCORE';
if isfield(handles.Data,'BrukerParameters')
  Exp.Field = DataForFitting.Field;
elseif isfield(handles.Data,'AWG_Parameters')
  Exp.Field =  0.1*handles.Data.AWG_Parameters.B;
end
Exp.tau = handles.Data.TauValues/1000;
Exp.dt = handles.Data.TimeStep1;
Exp.nPoints = length(handles.Data.PreProcessedSignal);

%Fill known optional parameters
Opt.ZeroFillFactor = length(handles.Processed.Signal)/length(handles.Data.PreProcessedSignal);
Opt.FreqLim = str2double(get(handles.XUpperLimit,'string'));
Opt.WindowType = handles.WindowTypeString;
Opt.WindowDecay = str2double(get(handles.Hammingedit,'string'));
Opt.L2GParameters.tauFactor2 = str2double(get(handles.L2G_tau2,'string'));
Opt.L2GParameters.sigmaFactor2 = str2double(get(handles.L2G_sigma2,'string'));
Opt.L2GParameters.tauFactor1 = str2double(get(handles.L2G_tau,'string'));
Opt.L2GParameters.sigmaFactor1 = str2double(get(handles.L2G_sigma,'string'));
Opt.Lorentz2GaussCheck = get(handles.Lorentz2GaussCheck,'value');

end

numSpec = length(ExpCell);

if numSpec>1
  esfit_hyscorean('globalfit',abs(handles.Processed.spectrum),[],[],Exp,Opt)
else
  esfit_hyscorean('saffron',abs(handles.Processed.spectrum),[],[],Exp,Opt)
end
